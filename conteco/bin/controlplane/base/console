#!/usr/bin/env bash
(
  export PATH="$CONTECO_EXECUTIONPLANE_APIINTERNALPATH_BASE"
  . executionplane-invoke "$0 $@"
  case $1 in
    --info)
      . info-summary console
    ;;
    backup|restore)
      console-backup-restore "$1" "$2"
    ;;
    clone-repo)
      repoName="$2"
      cd "${CONTECO_REALM_RUNTIME}"
      if [[ ! -d $repoName ]] ; then
        executionplane git clone "$repoName"
      else
        executionplane-warning "Repository folder already exists!"
      fi
      cd ..
    ;;
    cmd)
      shift
      executionplane $@
    ;;
    controlplane-service)
      shift
      controlplane-service $@
    ;;
    extract)
      if [[ "$3" == "--reload" ]] ; then
        executionplane docker image pull "$CONTECO_REGISTRY$2"
      fi
			. executionplane-capture-output docker create ${CONTECO_REGISTRY}$2
			destination="/conteco/pwd/$2"
			executionplane mkdir -p $destination
			executionplane docker container cp $CONTECO_EXECUTIONPLANE_OUTPUT:/conteco/repo/. $destination
		;;
    load)
      fromTar="false"
      if [[ "$2" == "--from-tar" ]] ; then
        fromTar="true"
        shift
      fi
      repo-load "$fromTar" "$2"
    ;;
    reset)
      echo "" > ./current-repo-selection
    ;;
    save)
      imageName="${CONTECO_REALM_RUNTIME}/${CONTECO_ECOSYSTEM_RUNTIME}.$2"
      repo-save "$imageName"
    ;;
    set)
      echo "$2" > ./current-repo-selection
    ;;
    set-repo-user)
			executionplane git config --global user.name "$2"
			executionplane git config --global user.email "$3"
      executionplane git config --global core.filemode false
		;;
    start-registry)
      port="$2"
      if [[ "$port" == "" ]] ; then
        port="5000"
      fi
      prefix="${CONTECO_ECOSYSTEM}_registry_base_2"
      registryImage="$CONTECO_REGISTRY${CONTECO_REALM_RUNTIME}/${CONTECO_ECOSYSTEM}.registry.base:2"
      executionplane docker run -d -p "${port}:5000" --restart=always --name "${prefix}" -v "${prefix}_data:/var/lib/registry" "${registryImage}"
		;;
    stop-registry)
      prefix="${CONTECO_ECOSYSTEM}_registry_base_2"
      executionplane docker container rm --force "${prefix}"
      executionplane docker volume rm --force "${prefix}_data"
    ;;
    unload)
			executionplane docker image rm --force "$CONTECO_REGISTRY$2"
      if [[ "$3" != "" ]] ; then
        executionplane docker image rm --force "$CONTECO_REGISTRY$2:$3"
			fi
    ;;
   *)
      executionplane-error "Method not recognised: $1."
    ;;
  esac
  executionplane-complete
)
