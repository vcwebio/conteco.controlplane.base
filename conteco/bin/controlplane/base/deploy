#!/usr/bin/env bash
if [[ "$1" == "for-each-node" ]] ; then
(
	shift
    . executionplane-invoke "$0 $@"
	if [[ $# -gt 1 ]] ; then
		method=$1
		if [[ " all image " != *"$method"* ]] ; then
			method="all"
		else
			shift
		fi
	else
		method="all"
	fi
	imageName="${CONTECO_REALM}/${CONTECO_ECOSYSTEM}.${CONTECO_TYPE}.${CONTECO_NAME}"
	case $method in
        "image")
			command=$1
			shift
			if [[ "$command" == "downup" || "$command" == "down" ]] ; then
				executionplane-error "Method $method downup / down not implemented!"
				.cluster remove  "${CONTECO_TYPE}_${CONTECO_NAME}"
			fi
			if [[ "$command" != "down" ]] ; then
				executionplane-error "Method $method up not implemented!"
				rootPath="${CONTECO_PWD}/${BASH_ARGV[0]}"
				arguments="-c $rootPathe/conteco/assets/${CONTECO_TYPE}/${CONTECO_NAME}/deploy/docker-compose.yml ${CONTECO_TYPE}_${CONTECO_NAME}"
#				composefolder="./infometis/${INFOMETIS_CONTAINERTYPE}/${INFOMETIS_CONTAINERNAME}"
#				envsubst < "${composefolder}/docker-compose.yml" > "${composefolder}/docker-compose.yml.env"
#				. executionplane docker stack deploy -c "${composefolder}/docker-compose.yml.env" "${INFOMETIS_CONTAINERNAME}"
#				rm "${composefolder}/docker-compose.yml.env"
				.cluster deploy $arguments
			fi
			;;
		all)
			extract-and-execute $imageName deploy $@
			;;
	esac
	executionplane-complete
)
else
    export PATH="$CONTECO_EXECUTIONPLANE_APIINTERNALPATH"
	for-each $(basename $0) $@
fi
