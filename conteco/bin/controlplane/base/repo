#!/usr/bin/env bash
(
	export PATH="$CONTECO_EXECUTIONPLANE_APIINTERNALPATH_BASE"
	. executionplane-invoke "$0 $@"
	imageName="${@: -1}"
	rootPath="/conteco/pwd/${imageName}"
	. $rootPath/environment

	currentpwd=$(pwd)
	if [[ -d $rootPath ]] ; then
	cd $rootPath
	fi
	case "$1" in
		add)
			executionplane git add .
		;;
		branch)
			executionplane git branch ${@:2:$#-2}
		;;
		create-workspace)
			executionplane git branch "workspace"
			executionplane git checkout "workspace"
		;;
		commit)
			message="${@:2:$#-2}"
			executionplane git commit -m "$(echo "$message")"
		;;
		compact)
			executionplane git reflog expire --updateref --rewrite --stale-fix --expire=all --all
			executionplane git repack -A -d -f -F --window=4095 --depth=4095 --unpack-unreachable=all
			executionplane git prune --expire=all
			executionplane git gc --prune=all --aggressive
			executionplane git push -f --all
			executionplane git push -f --tags
		;;
		checkin-workspace)
			executionplane git checkout master
			executionplane git merge workspace
			executionplane git tag -f "${CONTECO_TAG}"
		;;
		config)
			executionplane git remote set-url origin "https://github.com/${CONTECO_REALM_RUNTIME}/${CONTECO_ECOSYSTEM_RUNTIME}.${CONTECO_TYPE}.${CONTECO_NAME}.git"
			executionplane git branch --set-upstream-to=origin/master master
			executionplane git config core.filemode false
			executionplane git config credential.helper store
		;;
		extract)
			. executionplane-capture-output docker create ${CONTECO_REGISTRY}$imageName
			destination="/conteco/pwd/$imageName"
			executionplane mkdir -p $destination
			executionplane docker container cp $CONTECO_EXECUTIONPLANE_OUTPUT:/conteco/repo/. $destination
		;;
		init)
			executionplane git init
		;;
		load)
			fromTar="false"
			if [[ "$2" == "--from-tar" ]] ; then
				fromTar="true"
				shift
			fi
			repo-load $fromTar "${imageName}"
			repo-load $fromTar "${imageName}:${CONTECO_TAG}"
		;;
		log)
			executionplane git log ${@:2:$#-2}
		;;
		log10)
			executionplane git log --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --date=relative -n 10
		;;
		pull)
			executionplane git pull ${@:2:$#-2}
		;;
		push)
		  if [[ "$3" == "" ]] ; then
				executionplane "--errors-only" git push origin master
				executionplane "--errors-only" git push -f origin "$CONTECO_TAG"
			else
				executionplane git push ${@:2:$#-2}
			fi
		;;
		remote)
			executionplane git remote ${@:2:$#-2}
		;;
		remove)
			cd $currentpwd
			executionplane rm -rf $rootPath
		;;
		remove-workspace)
			executionplane git branch -d "workspace"
		;;
		retag-image)
			executionplane docker tag "${CONTECO_REGISTRY}$imageName:$CONTECO_TAG" "$2/${CONTECO_ECOSYSTEM_RUNTIME}.${CONTECO_TYPE}.${CONTECO_NAME}"
			executionplane docker tag "${CONTECO_REGISTRY}$imageName:$CONTECO_TAG" "$2/${CONTECO_ECOSYSTEM_RUNTIME}.${CONTECO_TYPE}.${CONTECO_NAME}:${CONTECO_TAG}"
		;;
		save)
      repo-save "$imageName:$CONTECO_TAG"
		;;
		status)
			executionplane git status
		;;
		symbolic-ref)
			executionplane git symbolic-ref ${@:2:$#-2}
		;;
		tag)
			if [[ "$3" == "" ]] ; then
				executionplane git tag -f ${CONTECO_TAG}
			else
				executionplane git tag ${@:2:$#-2}
			fi
		;;
		--info)
			. info-summary repo
		;;
		*)
			executionplane-error "Method not recognised: $1."
		;;
	esac
	cd $currentpwd
	executionplane-complete
)
