#!/usr/bin/env bash
if [[ "$1" == "for-each-node" ]] ; then
(
	shift
	. executionplane-invoke "$0 $@"
	method=$1
	shift
	# set path of node
	if [[ $# -gt 1 ]] ; then
	rootPath="${CONTECO_PWD}/${BASH_ARGV[0]}"
	else
	rootPath="${CONTECO_PWD}/$1"
	fi
	currentpwd=$(pwd)
	if [[ -d $rootPath ]] ; then
	cd $rootPath
	fi
	echo $rootPath
	imageName="${CONTECO_REALM}/${CONTECO_ECOSYSTEM}.${CONTECO_TYPE}.${CONTECO_NAME}"
	case "$method" in
		add)
			executionplane git add .
			;;
		branch)
			executionplane git branch ${@:1:$#-1}
			;;
		cleanup)
			executionplane git branch -d "workspace"
			;;
		create)
			executionplane-error "Method $method not implemented"
			;;
		checkout)
			# if additional parameter, then original git checkout only
			executionplane git branch "workspace"
			executionplane git checkout "workspace"
			;;
		commit)
			# if next parameter is flag then or no additional parameter then git commit only
			message="${@:1:$#-1}"
			executionplane git commit -m "$(echo "$message")"
			;;
		compact)
			executionplane git reflog expire --updateref --rewrite --stale-fix --expire=all --all
			executionplane git repack -A -d -f -F --window=4095 --depth=4095 --unpack-unreachable=all
			executionplane git prune --expire=all
			executionplane git gc --prune=all --aggressive
			executionplane git push --all
			executionplane git push --tags
			;;
		checkin)
			executionplane git checkout "${CONTECO_ECOSYSTEM}"
			executionplane git merge workspace
			executionplane git tag -f "${CONTECO_TAG}"
			;;
		extract)
			. executionplane-capture-output docker create $imageName
			destination="${CONTECO_PWD}/${CONTECO_REALM}/${CONTECO_ECOSYSTEM}.${CONTECO_TYPE}.${CONTECO_NAME}"
			executionplane mkdir -p $destination
			executionplane docker container cp $CONTECO_EXECUTIONPLANE_OUTPUT:/conteco/repo/. $destination
			;;
		init)
			executionplane git init
			;;
		load)
			if [[ "$CONTECO_TAG" != "" ]] ; then
				executionplane docker image pull "$CONTECO_REGISTRY$imageName:${CONTECO_TAG}"
				executionplane docker tag "$CONTECO_REGISTRY$imageName:${CONTECO_TAG}" "$CONTECO_REGISTRY$imageName"
			else
				executionplane docker image pull "$CONTECO_REGISTRY$imageName"
			fi
			;;
		log)
			executionplane git log
			;;
		log10)
			executionplane git log --pretty=format:"%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset" --abbrev-commit --date=relative -n 10
			;;
		prepare)
			executionplane git config --global user.name "$1"
			executionplane git config --global user.email "$2"
			executionplane git remote set-url origin "https://github.com/${CONTECO_REALM}/${CONTECO_ECOSYSTEM}.${CONTECO_TYPE}.${CONTECO_NAME}.git"
			executionplane git config credential.helper store
			;;
		pull)
			executionplane git pull
			;;
		push)
			executionplane git push origin "${CONTECO_ECOSYSTEM}"
			executionplane git push -f origin "$CONTECO_TAG"
			;;
		remote)
			executionplane git remote ${@:1:$#-1}
			;;
		remove)
			cd $currentpwd
			executionplane rm -rf $rootPath
			;;
		status)
			executionplane git status
			;;
		tag)
			executionplane git tag ${@:1:$#-1}
			;;
		unload)
			arguments=${@:1:$#-1}
			executionplane docker image rm "$imageName" $arguments
			executionplane docker image rm "$imageName:${CONTECO_TAG}" $arguments
			;;
		*)
			executionplane-error "Method not recognised: $method."
			;;
	esac
	cd $currentpwd
	executionplane-complete
)
else
(
	export PATH="$CONTECO_EXECUTIONPLANE_APIINTERNALPATH_BASE"
	selector=$(set-selector "${BASH_ARGV[0]}")
	. check-selector-exists $selector "$1"
	if [[ "$CONTECO_STATE" == "virtual" ]] ; then
		$(basename $0) "for-each-node" ${@:1:$#-1} $selector
	else
		for-each $(basename $0) $@
	fi
)
fi
